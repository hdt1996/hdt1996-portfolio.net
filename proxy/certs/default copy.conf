server{
    listen 8010 ssl;
    ssl_certificate /etc/nginx/certs/cert_n1.pem;
    ssl_certificate_key /etc/nginx/certs/key_n1.pem;
    ssl_session_cache shared:SSL:20m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    add_header Strict-Transport-Security "max-age=31536000";
    server_name nodes1.hdt1996-portfolio.me;
    location /socket.io/*{
    proxy_pass http://nodes1.hdt1996-portfolio.me:8010;}
}
server{
    listen 8011 ssl;
    ssl_certificate /etc/nginx/certs/cert_n2.pem;
    ssl_certificate_key /etc/nginx/certs/key_n2.pem;
    ssl_session_cache shared:SSL:20m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    add_header Strict-Transport-Security "max-age=31536000";
    server_name nodes2.hdt1996-portfolio.me;
    location / {
    proxy_pass http://nodes2.hdt1996-portfolio.me:8011;}
}
server{
    listen 8012 ssl;
    ssl_certificate /etc/nginx/certs/cert_n3.pem;
    ssl_certificate_key /etc/nginx/certs/key_n3.pem;
    ssl_session_cache shared:SSL:20m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    add_header Strict-Transport-Security "max-age=31536000";
    server_name nodes3.hdt1996-portfolio.me;
    location / {
    proxy_pass http://nodes3.hdt1996-portfolio.me:8012;}
}
server{
    listen 8013 ssl;
    ssl_certificate /etc/nginx/certs/cert_n4.pem;
    ssl_certificate_key /etc/nginx/certs/key_n4.pem;
    ssl_session_cache shared:SSL:20m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    add_header Strict-Transport-Security "max-age=31536000";
    server_name nodes4.hdt1996-portfolio.me;
    location / {
    proxy_pass http://nodes4.hdt1996-portfolio.me:8013;}
}

upstream nodes {
    ip_hash;
    server nodes1.hdt1996-portfolio.me:8010;
    server nodes2.hdt1996-portfolio.me:8011;
    server nodes3.hdt1996-portfolio.me:8012;
    server nodes4.hdt1996-portfolio.me:8013;
}

server{
    listen 443;
    listen [::]:443;
    server_name hdt1996-portfolio.me;
    include mime.types;
    listen 8001 ssl;
    ssl_certificate /etc/nginx/certs/cert_p1.pem;
    ssl_certificate_key /etc/nginx/certs/key_p1.pem;
    ssl_session_cache shared:SSL:20m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    add_header Strict-Transport-Security "max-age=31536000";

    location /static/ {
    alias /vol/static/;
    add_header X-debug-message "$uri /static/" always;
    }

    location /videos/ {
    alias /vol/videos/;
    add_header X-debug-message "$uri /videos/" always;
    }

    location /media/ {
    alias /vol/media/;
    add_header X-debug-message "$uri /media/" always;
    }

    location /react/static/ {
    alias /vol/react/static/;
    add_header X-debug-message "$uri /react/static/" always;
    }

    location /react/images/ {
    alias /vol/react/images/;
    try_files $uri $uri/ =404;
    add_header X-debug-message "$uri /react/images/" always;
    }

    location /react/videos/ {
    alias /vol/react/videos/;
    try_files $uri $uri/ =404;
    add_header X-debug-message "$uri /react/videos/" always;
    }

#### NOT NEEDED FOR NOW since videos rendered came in via components or css url() meaning stored in react/static/media ####
    # location /react/videos/ { 
    # alias /vol/react/build/videos/;
    # add_header X-debug-message "$uri /react/videos/" always;
    # }

    location ~* ^/react/(?!static|images|videos).*$ { #regex works because there is string preceding grouping, if not need to use ^
    add_header X-debug-message "$uri react/nonstatic" always;
    alias /vol/react/;
    try_files /index.html =404;  
    }  
 

    location /react/{
    add_header X-debug-message "$uri /react/" always;
    alias /vol/react/;
    }

    location ~* ^/socket.io/.*{
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_pass https://nodes;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        add_header X-debug-message "$uri /socket.io/" always;
    }

    location / {
        uwsgi_pass web:8000;
        add_header X-debug-message "$uri /" always;
        include /etc/nginx/uwsgi_params;
    }
}



